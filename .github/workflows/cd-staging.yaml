#   Flutter CI CD - GitHub Continuous Integration / Continuous Deployment Action that is triggered when someone tries to merge to release,
#   which runs all tests, analyzes the code and then signs and deploys for Android and iOS on respective VMs using GitHub Secrets.
#
#   Author: NightmindOfficial
#   Co-Author: n/a

name: Stage

on:
  pull_request:
    types: [opened]
    branches: [staging]
  workflow_dispatch:


env:
  FLUTTER_CHANNEL: 'stable' # 'stable', 'beta', or 'master', default to: 'stable'
  FLUTTER_VERSION: '3.3.10'
  XCODE_VERSION: '13.3.1'
  PATH_TO_AAB: 'build/app/outputs/bundle/release/app-release.aab'
  ANDROID_PACKAGE_NAME: 'de.investitacademy.linum'
  FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

jobs:
  build-project-artifact:
    name: Build Project Artifact
    runs-on: ubuntu-latest
    environment: Staging
    timeout-minutes: 30
    steps:
      - uses: geekyeggo/delete-artifact@v2
        with:
          name: linum-dir-artifact
          failOnError: false

      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          channel: ${{ env.FLUTTER_CHANNEL }}

      - id: Auth
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCLOUD_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Get gcloud secrets
        run: |
          gcloud secrets versions access latest --secret=linum-android-release-keystore-file --project=658687609050
          gcloud secrets versions access latest --secret=linum-ios-auth-file --project=658687609050


      - name: Prepare Firebase Option Configuration
        run: |
          curl -sL https://firebase.tools | bash
          dart pub global activate flutterfire_cli
          ls
          flutterfire --version
          flutterfire configure -o lib/firebase/firebase_options.g.dart -p linum-5d9f6 -y --platforms="android,ios" -i de.investitacademy.linum -a de.investitacademy.linum -m de.investitacademy.linum 


      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: linum-dir-artifact
          path: ./

  code-analysis-and-testing:
    name: Code Analysis and Testing
    needs: build-project-artifact
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Download a single artifact
        uses: actions/download-artifact@v3
        with:
          name: linum-dir-artifact

      - name: Set up Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          channel: ${{ env.FLUTTER_CHANNEL }}

      - name: Analyze Flutter Code
        run: flutter analyze

      - name: Flutter Test
        run: flutter test

  android:
    name: Android Beta Deployment
    needs: code-analysis-and-testing
    runs-on: ubuntu-latest
    environment: Staging
    timeout-minutes: 30
    steps:
      - name: Download a single artifact
        uses: actions/download-artifact@v3
        with:
          name: linum-dir-artifact

      - name: Install ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'
          bundler-cache: true

      - name: Set up Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          channel: ${{ env.FLUTTER_CHANNEL }}

      - name: Make script executable
        run: chmod +x ./android/android_cd.sh

      - name: Run Android CD script
        env:
          KEY_STORE_ENCRYPTION_KEY: ${{ secrets.KEY_STORE_ENCRYPTION_KEY }}
          KEY_PROPERTIES: ${{ secrets.KEY_PROPERTIES }}
          ANDROID_SECRET_JSON: ${{ secrets.ANDROID_SECRET_JSON }}
        run: ./android/android_cd.sh

  ios:
    name: iOS Beta Deployment
    needs: code-analysis-and-testing
    runs-on: macos-latest
    environment: Staging
    timeout-minutes: 50

    steps:
      - name: Download a single artifact
        uses: actions/download-artifact@v3
        with:
          name: linum-dir-artifact

      - name: Install ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'
          bundler-cache: true

      - name: Set up Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          channel: ${{ env.FLUTTER_CHANNEL }}

      - name: Make script executable
        run: chmod +x ./ios/ios_cd.sh

      - name: Run iOS CD script
        env:
          GIT_USER_NAME: ${{ secrets.GIT_USER_NAME }}
          GIT_ACCESS_TOKEN: ${{ secrets.GIT_ACCESS_TOKEN }}
          AUTH_KEY_ENCRYPTION_KEY: ${{ secrets.AUTH_KEY_ENCRYPTION_KEY }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          MATCH_KEYCHAIN_NAME: ${{ secrets.MATCH_KEYCHAIN_NAME }}
          MATCH_KEYCHAIN_PASSWORD: ${{ secrets.MATCH_KEYCHAIN_PASSWORD }}
        run: ./ios/ios_cd.sh



